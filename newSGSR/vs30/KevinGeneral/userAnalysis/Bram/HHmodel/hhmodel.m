function [SpkOut, t, V] = hhmodel(P, varargin)
%HHMODEL generate spiketrain based on Hodgkin and Huxley model of a Bushy cell
%   Spk = HHMODEL(P, Spk1, Spk2, ..., Spkn) calculates a spiketrain generated by
%   a modelled Bushy cell. The model must be defined by the structure P (see 
%   DEFHHMODEL to define such a structure). The spiketrains inputs, recorded
%   from the auditory nerve (AN), must be supplied as vectors. The number of
%   inputs must be defined in the struct P.
%
%   [Spk, t, V] = HHMODEL(P, Spk1, Spk2, ..., Spkn) also returns the membrane 
%   potential in function of time.
%
%   Repetitions of a nerve input can be given as cell-arrays. Output will then be a
%   cell-array containing spiketime vectors for all permutations of input vectors.
%
%   See also DEFHHMODEL

%Based on JASON S. ROTHMAN, ERIC D. YOUNG, PAUL B. MANIS, "Convergence of Auditory
%Nerve Fibers Onto Bushy Cells in the Ventral Cochlear Nucleus: Implications of a
%Computational Model", JOURNAL OF NEUROPHYSIOLOGY Vol.70, No. 6, December 1993

%Attention! There is a difference in the synaptic conductance function between the
%model of the aformentioned article and the one implemented here. 
%Ge = Ae * (t-tref)/Tdecay * exp(1-(t-tref)/Tdecay) is used in the article while
%here Ge = Ae * exp((t-tn)/Tdecay) is used ...

%B. Van de Sande 09-08-2004

if nargin < 1, error('Wrong number of input arguments.'); end
if P.ne ~= (nargin-1), error('Not enough spiketrain inputs.'); end

if any(cellfun('isclass', varargin, 'cell'))
    idx_double = find(cellfun('isclass', varargin, 'double'));
    for n = idx_double
        varargin(n) = { varargin(n) };
    end
        
    Nreps = cellfun('length', varargin);
    Nperms = prod(Nreps);
    if Nperms > P.mp
        Nperms = P.mp;
        Perms = genrandperms(Nreps, Nperms);
    else
        Perms = genperms(Nreps);
    end
   
    Hdl_Bar = waitbar(0, sprintf('Calculating permutations ...'), 'Name', 'HHmodel');
    for p = 1:Nperms
        for n = 1:P.ne
            Args{n} = varargin{n}{Perms(p, n)};
        end
        SpkOut{p} = HHmodelMEX(P, Args{:});
        
        if ishandle(Hdl_Bar)
            waitbar(p/Nperms, Hdl_Bar);
        else
            spk = cell(0);
            return;
        end
    end
    delete(Hdl_Bar);
else
    [SpkOut, t, V] = HHmodelMEX(P, varargin{:});
end
