function SMS = createSMSsxm(FREQ, TIMING, PRES, SD_INSTR, PRP, GlobalInfo, createdby);

% createSMSsxm - create stimulus record for sxm stimtype

StimCat = 'sxm';

% inherently monaural params
MON = struct(...
   'repDur', TIMING.repDur, ...
   'Fsample', FREQ.samFreq,...
   'FiltIndex', FREQ.filterIndex...
   );

% inherently binaural params
totalITD = TIMING.totalITD;
if isstruct(totalITD),
   BIN = struct(...
      'waveformITD', TIMING.totalITD.ITDset, ...
      'ITDindex', totalITD.ITDindex, ...
      'Nhead', totalITD.Nhead, ...
      'chan', PRES.chan ...
   );
else,
   BIN = struct(...
      'waveformITD', totalITD, ...
      'ITDindex', 1:length(totalITD), ...
      'chan', PRES.chan ...
   );
end

% extract channel-specific info
for ichan=1:2,
   RIGHT = struct(...
      'carFreq',    FREQ.carFreq(:,ichan),...
      'carTol',     FREQ.carTol(:,ichan),...
      'DoModulate', FREQ.DoModulate(:,ichan),...
      'modFreq',    FREQ.modFreq(:,ichan),...
      'modTol',     FREQ.modTol(:,ichan),...
      'modDepth',   FREQ.modDepth(:,ichan), ...
      'modPhase',   TIMING.modPhase(:,ichan), ...
      'carSphase',  TIMING.carSphase(:,ichan), ...
      'modSphase',  TIMING.modSphase(:,ichan),...
      'totDur',     TIMING.totDur(:,ichan), ...
      'burstDur',   TIMING.burstDur(:,ichan),...
      'riseDur',    TIMING.riseDur(:,ichan),...
      'fallDur',    TIMING.fallDur(:,ichan),...
      'onset',      TIMING.onset(:,ichan)...
      );
   if ichan==1, LEFT=RIGHT; end;
end

SPL = PRES.SPL;
Nsubseq = PRES.Nsubseq;
NREP = PRES.Nrep;

% COVAR (not implemented yet)
% if params are varied indepently, which groups belong together?
COVAR = [];

% PRP is information directly passed to PRP (play/record/plot)
% functions, thus bypassing stimdef and stimeval stages
  
% toghether
SMS = CollectInStruct(StimCat, Nsubseq, MON, BIN, LEFT, RIGHT, ...
   SPL, NREP, COVAR, PRP, SD_INSTR, GlobalInfo, createdby);

