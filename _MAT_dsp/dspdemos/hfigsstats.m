function varargout = hfigsstats(varargin)
%HFIGSSTATS Set up figures for plotting data in dspStats demo.

%   S = HFIGSTATS(FRAMESIZE, FS)

%   Copyright 2006-2010 The MathWorks, Inc.

[frameSize, Fs] = deal(varargin{:});
hscope = dsp.private.Scope('Name', 'Signal Statistics',...
  'AxesLayout', [3 1]);

hlineplot(1) = dsp.private.LinePlot('DataPlot', 'Constant', ...
  'FrameSize',  [2 frameSize 2], ...
  'XResolution', [frameSize 1 frameSize], ...
  'X0', [0 1 0], ...
  'PlotColor', {'r','b','r'}, ...
  'Title','Signal - Red lines show overall min and max until now',...
  'XLabel', 'Samples in a frame', ...
  'YLabel', 'Amplitude', ...
  'AxisScaling',[0 frameSize -1.1 1.1]);

hlineplot(2) = dsp.private.LinePlot('DataPlot', 'Shift', ...
  'XDataLimit', 120, ...
  'FrameSize', 1, ...
  'XResolution', 1, ...
  'X0', 0, ...
  'Title', 'Running Mean', ...
  'XLabel', 'Frame number', ...
  'YLabel', 'Amplitude', ...
  'AxisScaling',[0 120 -0.02 0.02]);

hlineplot(3) = dsp.private.LinePlot('DataPlot','Constant', ...
  'FrameSize', frameSize/2, ...
  'XResolution', Fs/frameSize, ...
  'XLabel', 'Frequency (Hz)', ...
  'YLabel', 'Magnitude (dB)', ...
  'X0', 0, ...
  'Title','FFT of signal', ...
  'AxisScaling',[0 Fs/2 -100 100]);

hscope.PlotObject = hlineplot;
setup(hscope);

% Create a struct with data useful for plotting
s.Fs                = Fs;
s.frameSize         = frameSize;
s.framenumber       = 0;
s.hscope            = hscope;
s.hlineplot         = hlineplot;
varargout{1}        = s;

% EOF