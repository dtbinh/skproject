function states = quantizestates(this, states)
%QUANTIZESTATES   Quantize the states for a CIC interpolation filter.

%   Author(s): P. Costa
%   Copyright 1999-2004 The MathWorks, Inc.

% Only quantize states if we are NOT initializing the object.
if ~this.Initializing,

    swl = get(this, 'SectionWordLengths');
    sfl = get(this, 'SectionFracLengths');

    [nsections, nchannels] = size(states.Integrator);

    % Loop over the states if they are multichannel
    for indx = 1:nsections
        fmi = fimath('SumMode',  'SpecifyPrecision', ...
            'SumWordLength',     swl(indx+nsections), ...
            'SumFractionLength', sfl(indx+nsections), ...
            'RoundMode',         'floor', ...
            'OverflowMode',      'wrap', ...
            'CastBeforeSum',     1);

        fmc = fimath('SumMode',  'SpecifyPrecision', ...
            'SumWordLength',     swl(indx), ...
            'SumFractionLength', sfl(indx), ...
            'RoundMode',         'floor', ...
            'OverflowMode',      'wrap', ...
            'CastBeforeSum',     1);

        for jndx = 1:nchannels

            states.Integrator(indx,jndx).Value = fi(states.Integrator(indx,jndx).Value, true, ...
                'WordLength',     swl(indx+nsections), ...
                'FractionLength', sfl(indx+nsections), ...
                'fimath', fmi);
            states.Comb(indx,jndx).Value       = fi(states.Comb(indx,jndx).Value, true, ...
                'WordLength',     swl(indx), ...
                'FractionLength', sfl(indx), ...
                'fimath', fmc);
        end
    end
end

% [EOF]
