function [p, v] = info(this)
%INFO   Return the info for the object.

%   Author(s): J. Schickler
%   Copyright 1999-2005 The MathWorks, Inc.

p = {getString(message('signal:dfilt:info:Numerator')), ...
     getString(message('signal:dfilt:info:Denominator')), ...
     getString(message('signal:dfilt:info:ScaleValues')), ...
     getString(message('signal:dfilt:info:Input')), ...
     getString(message('signal:dfilt:info:SectionInput')), ...
     getString(message('signal:dfilt:info:SectionOutput')), ...
     getString(message('signal:dfilt:info:Output')), ...
     getString(message('signal:dfilt:info:NumeratorState')), ...
     getString(message('signal:dfilt:info:DenominatorState')), ...
     getString(message('signal:dfilt:info:Multiplicand')), ...
     getString(message('signal:dfilt:info:NumeratorProd')), ...
     getString(message('signal:dfilt:info:DenominatorProd')), ...
     getString(message('signal:dfilt:info:NumeratorAccum')), ...
     getString(message('signal:dfilt:info:DenominatorAccum')), ...
     getString(message('signal:dfilt:info:RoundMode')), ...
     getString(message('signal:dfilt:info:OverflowMode'))};

if this.Signed
    pre = 's';
else
    pre = 'u';
end

v = {formatinfo(this,pre,this.CoeffWordLength, this.NumFracLength), ...
    formatinfo(this,pre,this.CoeffWordLength, this.DenFracLength), ...
    formatinfo(this,pre,this.CoeffWordLength, this.ScaleValueFracLength), ...
    formatinfo(this,'s',this.InputWordLength, this.InputFracLength), ...
    formatinfo(this,'s',this.SectionInputWordLength, this.SectionInputFracLength), ...
    formatinfo(this,'s',this.SectionOutputWordLength, this.SectionOutputFracLength), ...
    formatinfo(this,'s',this.OutputWordLength, this.OutputFracLength), ...
    formatinfo(this,'s',this.StateWordLength, this.NumStateFracLength), ...
    formatinfo(this,'s',this.StateWordLength, this.DenStateFracLength), ...
    formatinfo(this,'s',this.MultiplicandWordLength, this.MultiplicandFracLength), ...
    formatinfo(this,'s',this.ProductWordLength, this.NumProdFracLength), ...
    formatinfo(this,'s',this.ProductWordLength, this.DenProdFracLength), ...
    formatinfo(this,'s',this.AccumWordLength, this.NumAccumFracLength), ...
    formatinfo(this,'s',this.AccumWordLength, this.DenAccumFracLength), ...
    this.RoundMode, this.OverflowMode};

if ~strcmpi(this.AccumMode, 'FullPrecision')
    p{end+1} = getString(message('signal:dfilt:info:CastBeforeSum'));
    v{end+1} = mat2str(this.CastBeforeSum);
end

% [EOF]
