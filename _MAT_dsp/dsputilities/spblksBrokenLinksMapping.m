function mapOldMaskToCurrent = spblksBrokenLinksMapping()
% Broken links restoration mapping for DSP System Toolbox blocks

% Copyright 1995-2013 The MathWorks, Inc.

mapOldMaskToCurrent = cat(1,dspvisionMap, ...
                            dspadpt3Map, ...
                            dsparch4Map, ...
                            dspbuff3Map, ...
                            dspddes3Map, ...
                            dspfactorsMap, ...
                            dspindexMap, ...
                            dspinversesMap, ...
                            dsplpMap, ...
                            dspmathopsMap, ...
                            dspmlti4Map, ...
                            dspmtrx3Map, ...
                            dspobslibMap, ...
                            dspparest3Map, ...
                            dsppolyfunMap, ...
                            dspquant2Map, ...
                            dspsigattribsMap, ...
                            dspsigopsMap, ...
                            dspsnks4Map, ...
                            dspsolversMap, ...
                            dspspect3Map, ...
                            dspsrcs4Map, ...
                            dspstat3Map, ...
                            dspswit3Map, ...                          
                            dspxfrm3Map, ...
                            dsparch3Map, ...
                            dspnetworkMap);

mapOldMaskToCurrent = cell2struct( mapOldMaskToCurrent, { 'oldMaskType','newMaskType','newBlockType','newRefBlock', 'MaskNames', 'SFunctionName', 'linkMappingCallback' }, 2);


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                               %
% Block listings for individual libraries       %
%                                               %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Each block has a unique mask type based on which a unique mapping would be found. Only 
% if mask type mapping is not unique, mask parameter mapping is used. If the uniqueness of
% mask types is not fulfilled for a particular case, the mask parameter list of only those
% block entries need to be deligently analyzed.

% Here is the list of non-unique MaskType parameters that need to have
% their mask name parameters in the table. Only add new ones if the block
% MaskType is used in some other library.
%
% dspmlti4/Dyadic Analysis\nFilter Bank
% dspobslib/Dyadic Analysis\nFilter Bank
% dspmlti4/Dyadic Synthesis\nFilter Bank
% dspobslib/Dyadic Synthesis\nFilter Bank

function mapOldMaskToCurrent = dspvisionMap()
mapOldMaskToCurrent = { ...
'From Multimedia File', ...
   'From Multimedia File', ...
   'S-Function', ...
   'dspvision/From Multimedia File', ...
   { ...
    'inputFilename'; ...
    'loop'; ...
    'numPlays'; ...
    'outputStreams'; ...
    'videoDataType'; ...
    'audioDataType'; ...
    'inheritSampleTime'; ...
    'userDefinedSampleTime'; ...
    'noAudioOutput'; ...
    'isIntensityVideo'; ...
    'fourcc'; ...
    'colorVideoFormat'; ...
    'outputEOF'; ...
    'dataOrg'; ...
    'audioFrameSize'; ...
    'computeAudioFrameSize'; ...
    'outSamplingMode'; ...  
   }, ...
   'sdspwmmfi2',[]; ...
'To Multimedia File', ...
   'To Multimedia File', ...
   'S-Function', ...
   'dspvision/To Multimedia File', ...
   { ...
    'outputFilename'; ... 
    'streamSelection'; ... 
    'videoCompressor'; ... 
    'audioCompressor'; ... 
    'imagePorts'; ... 
    'fileType'; ... 
    'audioDatatype'; ... 
    'fourcc'; ... 
    'videoQuality'; ...
    'mj2000CompFactor';
   }, ...
   'sdspwmmfo2',[]; ... 
};

function mapOldMaskToCurrent = dspadpt3Map()
mapOldMaskToCurrent = { ...
'Block LMS Filter', ...
   'Block LMS Filter', ...
   'S-Function', ...
   'dspadpt3/Block LMS Filter', ...
   { ...     
   }, ...
   'sdspblms', []; ...
'Fast Block LMS Filter', ...
   'Fast Block LMS Filter', ...
   'SubSystem', ...
   'dspadpt3/Fast Block LMS Filter', ...
   { ...      
   }, ...
   '', []; ...
'Kalman Adaptive Filter', ...
   'Kalman Adaptive Filter', ...
   'SubSystem', ...
   'dspadpt3/Kalman\nAdaptive Filter', ...
   { ...  
   }, ...
   '', []; ...
'Kalman Filter', ...
   'Kalman Filter', ...
   'SubSystem', ...
   'dspadpt3/Kalman Filter', ...
   { ...      
   }, ...
   '', []; ...
'LMS Filter', ...
   'LMS Filter', ...
   'S-Function', ...
   'dspadpt3/LMS Filter', ...
   { ...      
   }, ...
   'sdsplms', []; ...
'RLS filter', ...
   'RLS filter', ...
   'SubSystem', ...
   'dspadpt3/RLS Filter', ...
   { ...     
   }, ...
   '', []; ...
};

function mapOldMaskToCurrent = dsparch3Map()
mapOldMaskToCurrent = { ...
% dsparch3/Biquadratic\nFilter block is block-forwarded to dsparch4/Biquad Filter, hence 
% no need for a separate entry here. dsparch4Map() has a data entry for 'Biquadratic Filter'
% mask type which would take care of such blocks.
%'Biquadratic Filter', ...
%   'Biquadratic Filter', ...
%   'S-Function', ...
%   'dsparch3/Biquadratic\nFilter', ...
%   { ...
%      'sos'; ...
%      'IC'; ...
%   }, ...
%   'sdspfilter'; ...
'Direct-Form II Transpose Filter', ...
   'Direct-Form II Transpose Filter', ...
   'S-Function', ...
   'dsparch3/Direct-Form II\nTranspose Filter', ...
   { ...      
   }, ...
   'sdspfilter', []; ...
'Time-Varying Lattice Filter', ...
   'Time-Varying Lattice Filter', ...
   'S-Function', ...
   'dsparch3/Time-Varying\nLattice Filter', ...
   { ...      
   }, ...
   'sdspfilter', []; ...
'Time-Varying Direct-Form II Transpose Filter', ...
   'Time-Varying Direct-Form II Transpose Filter', ...
   'S-Function', ...
   'dsparch3/Time-Varying Direct-\nForm II Transpose Filter', ...
   { ...     
   }, ...
   'sdspfilter', []; ...
};

function mapOldMaskToCurrent = dsparch4Map()
mapOldMaskToCurrent = { ...
'Analog Filter Design', ...
   'Analog Filter Design', ...
   'StateSpace', ...
   'dsparch4/Analog\nFilter Design', ...
   { ...     
   }, ...
   '', []; ...
'Digital Filter Design', ...
   'Digital Filter Design', ...
   'SubSystem', ...
   'dsparch4/Digital\nFilter Design', ...
   { ...     
   }, ...
   '', []; ...
'Digital Filter', ...
   'Digital Filter', ...
   'S-Function', ...
   'dsparch4/Digital Filter', ...
   { ...     
   }, ...
   'sdspfilter2', @dspFixBrokenLinksIP; ...
'Biquad Filter', ...
   'Biquad Filter', ...
   'S-Function', ...
   'dsparch4/Biquad Filter', ...
   { ...      
   }, ...
   'sdspbiquad', @dspFixBrokenLinksIP; ...
% This entry is to relink dspobslib/Biquadratic\nFilter block (its mask type is 'Biquadratic Filter')
% to dsparch4/Biquad Filter block
'Biquadratic Filter', ...
   'Biquad Filter', ...
   'S-Function', ...
   'dsparch4/Biquad Filter', ...
   { ...     
   }, ...
   'sdspbiquad', @dspFixBrokenLinksIP; ...
'Filter Realization Wizard', ...
   'Filter Realization Wizard', ...
   'SubSystem', ...
   'dsparch4/Filter\nRealization\nWizard', ...
   { ...
   }, ...
   '', []; ...
'Overlap-Add FFT Filter', ...
   'Overlap-Add FFT Filter', ...
   'SubSystem', ...
   'dsparch4/Overlap-Add\nFFT Filter', ...
   { ...     
   }, ...
   '', []; ...
'Overlap-Save FFT Filter', ...
   'Overlap-Save FFT Filter', ...
   'SubSystem', ...
   'dsparch4/Overlap-Save\nFFT Filter', ...
   { ...      
   }, ...
   '', []; ...
};

function mapOldMaskToCurrent = dspbuff3Map()
mapOldMaskToCurrent = { ...
'Buffer', ...
   'Buffer', ...
   'S-Function', ...
   'dspbuff3/Buffer', ...
   { ...      
   }, ...
   'sdsprebuff2', []; ...
'Delay Line', ...
   'Delay Line', ...
   'S-Function', ...
   'dspbuff3/Delay Line', ...
   { ...     
   }, ...
   'sdspsreg2', []; ...
'Queue', ...
   'Queue', ...
   'S-Function', ...
   'dspbuff3/Queue', ...
   { ...      
   }, ...
   'sdspstacknqueue', []; ...
'Stack', ...
   'Stack', ...
   'S-Function', ...
   'dspbuff3/Stack', ...
   { ...     
   }, ...
   'sdspstacknqueue', []; ...
'Triggered Delay Line', ...
   'Triggered Delay Line', ...
   'SubSystem', ...
   'dspbuff3/Triggered\nDelay Line', ...
   { ...     
   }, ...
   '', []; ...
'Unbuffer', ...
   'Unbuffer', ...
   'S-Function', ...
   'dspbuff3/Unbuffer', ...
   { ...      
   }, ...
   'sdsprebuff2', []; ...
};

function mapOldMaskToCurrent = dspddes3Map()
mapOldMaskToCurrent = { ...
'Digital FIR Filter Design', ...
   'Digital FIR Filter Design', ...
   'SubSystem', ...
   'dspddes3/Digital FIR\nFilter Design', ...
   { ...      
   }, ...
   '', []; ...
'Digital FIR Raised Cosine Filter Design', ...
   'Digital FIR Raised Cosine Filter Design', ...
   'SubSystem', ...
   'dspddes3/Digital FIR Raised\nCosine Filter Design', ...
   { ...     
   }, ...
   '', []; ...
'Digital IIR Filter Design', ...
   'Digital IIR Filter Design', ...
   'SubSystem', ...
   'dspddes3/Digital IIR\nFilter Design', ...
   { ...     
   }, ...
   '', []; ...
'Least Squares FIR Filter Design', ...
   'Least Squares FIR Filter Design', ...
   'SubSystem', ...
   'dspddes3/Least Squares FIR\nFilter Design', ...
   { ...     
   }, ...
   '', []; ...
'Remez FIR Filter Design', ...
   'Remez FIR Filter Design', ...
   'SubSystem', ...
   'dspddes3/Remez FIR\nFilter Design', ...
   { ...     
   }, ...
   '', []; ...
'Yule-Walker IIR Filter Design', ...
   'Yule-Walker IIR Filter Design', ...
   'SubSystem', ...
   'dspddes3/Yule-Walker IIR\nFilter Design', ...
   { ...     
   }, ...
   '', []; ...
};

function mapOldMaskToCurrent = dspfactorsMap()
mapOldMaskToCurrent = { ...
'Cholesky Factorization', ...
   'Cholesky Factorization', ...
   'S-Function', ...
   'dspfactors/Cholesky\nFactorization', ...
   { ...      
   }, ...
   'sdspchol2', []; ...
'LDL Factorization', ...
   'LDL Factorization', ...
   'S-Function', ...
   'dspfactors/LDL Factorization', ...
   { ...      
   }, ...
   'sdspldl2', []; ...
'LU Factorization', ...
   'LU Factorization', ...
   'S-Function', ...
   'dspfactors/LU Factorization', ...
   { ...     
   }, ...
   'sdsplu2', []; ...
'QR Factorization', ...
   'QR Factorization', ...
   'S-Function', ...
   'dspfactors/QR Factorization', ...
   { ...
   }, ...
   'sdspqre2', []; ...
'Singular Value Decomposition', ...
   'Singular Value Decomposition', ...
   'S-Function', ...
   'dspfactors/Singular Value\nDecomposition', ...
   { ...     
   }, ...
   'sdspsvd', []; ...
};

function mapOldMaskToCurrent = dspindexMap()
mapOldMaskToCurrent = { ...
'Flip', ...
   'Flip', ...
   'S-Function', ...
   'dspindex/Flip', ...
   { ...  
   }, ...
   'sdspflip', []; ...
'Multiport Selector', ...
   'Multiport Selector', ...
   'S-Function', ...
   'dspindex/Multiport\nSelector', ...
   { ...     
   }, ...
   'sdspmultiportsel', []; ...
% dspindex/Overwrite Values block is a linked copy of dspmtrx3/Overwrite Values block, hence 
% no need for a separate entry here. dspmtrx3Map() has a data entry for 'Overwrite Values'
% mask type which would take care of such blocks
% The above statement applies to dspindex/Submatrix block as well
%'Overwrite Values', ...
%   'Overwrite Values', ...
%   'S-Function', ...
%   'dspindex/Overwrite Values', ...
%   { ...
%   }, ...
%   'sdspoverwrite'; ...
%'Submatrix', ...
%   'Submatrix', ...
%   'S-Function', ...
%   'dspindex/Submatrix', ...
%   { ...
%   }, ...
%   'sdspsubmtrx'; ...
'Variable Selector', ...
   'Variable Selector', ...
   'S-Function', ...
   'dspindex/Variable\nSelector', ...
   { ...
   }, ...
   'sdspperm2', []; ...
};

function mapOldMaskToCurrent = dspinversesMap()
mapOldMaskToCurrent = { ...
'LU Inverse', ...
   'LU Inverse', ...
   'SubSystem', ...
   'dspinverses/ LU Inverse', ...
   { ...
   }, ...
   '', []; ...
'Cholesky Inverse', ...
   'Cholesky Inverse', ...
   'SubSystem', ...
   'dspinverses/Cholesky Inverse', ...
   { ...     
   }, ...
   '', []; ...
'LDL Inverse', ...
   'LDL Inverse', ...
   'SubSystem', ...
   'dspinverses/LDL Inverse', ...
   { ...     
   }, ...
   '', []; ...
'Pseudoinverse', ...
   'Pseudoinverse', ...
   'S-Function', ...
   'dspinverses/Pseudoinverse', ...
   { ...
   }, ...
   'sdsppinv', []; ...
};

function mapOldMaskToCurrent = dsplpMap()
mapOldMaskToCurrent = { ...
'Autocorrelation LPC', ...
   'Autocorrelation LPC', ...
   'SubSystem', ...
   'dsplp/Autocorrelation\nLPC', ...
   { ...     
   }, ...
   '', []; ...
'LPC to LSF/LSP Conversion', ...
   'LPC to LSF/LSP Conversion', ...
   'S-Function', ...
   'dsplp/LPC to LSF//LSP\nConversion', ...
   { ...     
   }, ...
   'sdsppoly2lsp', []; ...
'LPC to/from Cepstral Coefficients', ...
   'LPC to/from Cepstral Coefficients', ...
   'S-Function', ...
   'dsplp/LPC to//from Cepstral\nCoefficients ', ...
   { ...     
   }, ...
   'sdsplpc2cc', []; ...
'LPC to/from RC', ...
   'LPC to/from RC', ...
   'S-Function', ...
   'dsplp/LPC to//from RC', ...
   { ...     
   }, ...
   'sdsprc2lpc', []; ...
'LPC/RC to Autocorrelation', ...
   'LPC/RC to Autocorrelation', ...
   'S-Function', ...
   'dsplp/LPC//RC to Autocorrelation', ...
   { ...      
   }, ...
   'sdsprc2ac', []; ...
'LSF/LSP to LPC Conversion', ...
   'LSF/LSP to LPC Conversion', ...
   'S-Function', ...
   'dsplp/LSF//LSP to LPC\nConversion', ...
   { ...     
   }, ...
   'sdsplsp2poly', []; ...
% dsplp/Levinson-Durbin block is a linked copy of dspsolvers/Levinson-Durbin block, hence 
% no need for a separate entry here. dspsolversMap() has a data entry for 'Levinson-Durbin'
% mask type which would take care of such blocks
%'Levinson-Durbin', ...
%   'Levinson-Durbin', ...
%   'S-Function', ...
%   'dsplp/Levinson-Durbin', ...
%   { ...
%   }, ...
%   'sdsplevdurb2'; ...
};

function mapOldMaskToCurrent = dspmathopsMap()
mapOldMaskToCurrent = { ...
'Complex Exponential', ...
   'Complex Exponential', ...
   'SubSystem', ...
   'dspmathops/Complex\nExponential', ...
   { ...
   }, ...
   '', []; ...
'Cumulative Product', ...
   'Cumulative Product', ...
   'S-Function', ...
   'dspmathops/Cumulative\nProduct', ...
   { ...      
   }, ...
   'sdspcumsumprod', []; ...
'Cumulative Sum', ...
   'Cumulative Sum', ...
   'S-Function', ...
   'dspmathops/Cumulative\nSum', ...
   { ...      
   }, ...
   'sdspcumsumprod', []; ...
% xxx uncomment when name collision is resolved in slupdate   
%'Difference', ...
%   'Difference', ...
%   'S-Function', ...
%   'dspmathops/Difference', ...
%   { ...
%   }, ...
%   'sdspdiff2'; ...
'Normalization', ...
   'Normalization', ...
   'S-Function', ...
   'dspmathops/Normalization', ...
   { ...     
   }, ...
   'sdsp2norm2', []; ...
'dB Conversion', ...
   'dB Conversion', ...
   'SubSystem', ...
   'dspmathops/dB Conversion', ...
   { ... 
   }, ...
   '', []; ...
'dB Gain', ...
   'dB Gain', ...
   'SubSystem', ...
   'dspmathops/dB Gain', ...
   { ...      
   }, ...
   '', []; ...
};

function mapOldMaskToCurrent = dspmlti4Map()
mapOldMaskToCurrent = { ...
'CIC Decimation', ...
   'CIC Decimation', ...
   'S-Function', ...
   'dspmlti4/CIC\nDecimation', ...
   { ...      
   }, ...
   'sdspcicfilter', []; ...
'CIC Interpolation', ...
   'CIC Interpolation', ...
   'S-Function', ...
   'dspmlti4/CIC\nInterpolation', ...
   { ...      
   }, ...
   'sdspcicfilter', []; ...
'Dyadic Analysis Filter Bank', ...
   'Dyadic Analysis Filter Bank', ...
   'S-Function', ...
   'dspmlti4/Dyadic Analysis\nFilter Bank', ...
   { ...      
      'Wname'; ...
      'OrdRec_ordDec'; ...
      'Order'; ...
      'LPF'; ...
      'HPF'; ...
      'NumLevels'; ...
      'tree'; ...
      'Output'; ...   
   }, ...
   'sdspdwt', []; ...
'Dyadic Synthesis Filter Bank', ...
   'Dyadic Synthesis Filter Bank', ...
   'S-Function', ...
   'dspmlti4/Dyadic Synthesis\nFilter Bank', ...
   { ...  
      'Wname'; ...
      'OrdRec_ordDec'; ...
      'Order'; ...
      'LPF'; ...
      'HPF'; ...
      'NumLevels'; ...
      'tree'; ...
      'Input'; ...   
   }, ...
   'sdspidwt', []; ...
'FIR Decimation', ...
   'FIR Decimation', ...
   'S-Function', ...
   'dspmlti4/FIR\nDecimation', ...
   { ...     
   }, ...
   'sdspfirdn2', @dspFixBrokenLinksIP; ...
'FIR Interpolation', ...
   'FIR Interpolation', ...
   'S-Function', ...
   'dspmlti4/FIR\nInterpolation', ...
   { ...      
   }, ...
   'sdspupfir2', @dspFixBrokenLinksIP; ...
'FIR Rate Conversion', ...
   'FIR Rate Conversion', ...
   'S-Function', ...
   'dspmlti4/FIR Rate\nConversion', ...
   { ...      
   }, ...
   'sdspupfirdn2', []; ...
'Two-Channel Analysis Subband Filter', ...
   'Two-Channel Analysis Subband Filter', ...
   'SubSystem', ...
   'dspmlti4/Two-Channel Analysis\nSubband Filter', ...
   { ...      
   }, ...
   '', @dspFixBrokenLinksIP; ...
'Two-Channel Synthesis Subband Filter', ...
   'Two-Channel Synthesis Subband Filter', ...
   'SubSystem', ...
   'dspmlti4/Two-Channel Synthesis\nSubband Filter', ...
   { ...     
   }, ...
   '', @dspFixBrokenLinksIP; ...
};

function mapOldMaskToCurrent = dspmtrx3Map()
mapOldMaskToCurrent = { ...
'Constant Diagonal Matrix', ...
   'Constant Diagonal Matrix', ...
   'SubSystem', ...
   'dspmtrx3/Constant Diagonal\nMatrix', ...
   { ...     
   }, ...
   '', []; ...
'Create Diagonal Matrix', ...
   'Create Diagonal Matrix', ...
   'S-Function', ...
   'dspmtrx3/Create Diagonal\nMatrix', ...
   { ...
   }, ...
   'sdspdiag2', []; ...
   'Extract Diagonal', ...
   'Extract Diagonal', ...
   'S-Function', ...
   'dspmtrx3/Extract Diagonal', ...
   { ...
   }, ...
   'sdspdiag2', []; ...
'Extract Triangular Matrix', ...
   'Extract Triangular Matrix', ...
   'S-Function', ...
   'dspmtrx3/Extract Triangular\nMatrix', ...
   { ...     
   }, ...
   'sdsptri2', []; ...
'Identity Matrix', ...
   'Identity Matrix', ...
   'S-Function', ...
   'dspmtrx3/Identity Matrix', ...
   { ...     
   }, ...
   'sdspeye', []; ...
'Matrix Exponential', ...
   'Matrix Exponential', ...
   'SubSystem', ...
   'dspmtrx3/Matrix\nExponential', ...
   { ...
   }, ...
   '', []; ...
'Matrix Product', ...
   'Matrix Product', ...
   'S-Function', ...
   'dspmtrx3/Matrix\nProduct', ...
   { ...     
   }, ...
   'sdspmsumprod', []; ...
'Array-Vector Add', ...
   'Array-Vector Add', ...
   'S-Function', ...
   'dspmtrx3/Array-Vector\nAdd', ...
   { ...      
   }, ...
   'sdspdmult2', []; ...    
'Array-Vector Subtract', ...
   'Array-Vector Subtract', ...
   'S-Function', ...
   'dspmtrx3/Array-Vector\nSubtract', ...
   { ...     
   }, ...
   'sdspdmult2', []; ...  
'Array-Vector Divide', ...
   'Array-Vector Divide', ...
   'S-Function', ...
   'dspmtrx3/Array-Vector\nDivide', ...
   { ...      
   }, ...
   'sdspdmult2', []; ... 
'Array-Vector Multiply', ...
   'Array-Vector Multiply', ...
   'S-Function', ...
   'dspmtrx3/Array-Vector\nMultiply', ...
   { ...      
   }, ...
   'sdspdmult2', []; ...
'Matrix Square', ...
   'Matrix Square', ...
   'S-Function', ...
   'dspmtrx3/Matrix\nSquare', ...
   { ...
   }, ...
   'sdspmsqr2', []; ...
'Matrix Sum', ...
   'Matrix Sum', ...
   'S-Function', ...
   'dspmtrx3/Matrix\nSum', ...
   { ...     
   }, ...
   'sdspmsumprod', []; ...
'Matrix 1-Norm', ...
   'Matrix 1-Norm', ...
   'S-Function', ...
   'dspmtrx3/Matrix \n1-Norm', ...
   { ...      
   }, ...
   'sdspm1norm2', []; ...
'Overwrite Values', ...
   'Overwrite Values', ...
   'S-Function', ...
   'dspmtrx3/Overwrite Values', ...
   { ...      
   }, ...
   'sdspoverwrite', []; ...
'Permute Matrix', ...
   'Permute Matrix', ...
   'S-Function', ...
   'dspmtrx3/Permute\nMatrix', ...
   { ...      
   }, ...
   'sdspperm2', []; ...
'Reciprocal Condition', ...
   'Reciprocal Condition', ...
   'SubSystem', ...
   'dspmtrx3/Reciprocal\nCondition', ...
   { ...
   }, ...
   '', []; ...
'Submatrix', ...
   'Submatrix', ...
   'S-Function', ...
   'dspmtrx3/Submatrix', ...
   { ...      
   }, ...
   'sdspsubmtrx', []; ...
'Toeplitz', ...
   'Toeplitz', ...
   'S-Function', ...
   'dspmtrx3/Toeplitz', ...
   { ...     
   }, ...
   'sdspmtoep2', []; ...
'Transpose', ...
   'Transpose', ...
   'SubSystem', ...
   'dspmtrx3/Transpose', ...
   { ...      
   }, ...
   '', []; ...
};

function mapOldMaskToCurrent = dspobslibMap()
% Data sets for several blocks in this function are commented out as they are linked copies
% of blocks that live in other (parent) libraries. The parent library mapping functions 
% have data entries for these blocks, hence no need for a separate entry here.
% These blocks are listed here with their parent blocks:-
% Biquadratic Filter --> dsparch4/Biquad Filter
% Digital FIR Filter Design --> dspddes3/Digital FIR Filter Design
% Digital FIR Raised Cosine Filter Design --> dspddes3/Digital FIR Raised Cosine Filter Design
% Digital IIR Filter Design --> dspddes3/Digital IIR Filter Design
% Direct-Form II Transpose Filter --> dsparch3/Direct-Form II Transpose Filter
% Least Squares FIR Filter Design --> dspddes3/Least Squares FIR Filter Design
% Remez FIR Filter Design --> dspddes3/Remez FIR Filter Design
% Time-Varying Direct-Form II Transpose Filter --> dsparch3/Time-Varying Direct-Form II Transpose Filter
% Time-Varying Lattice Filter --> dsparch3/Time-Varying Lattice Filter
% Yule-Walker IIR Filter Design --> dspddes3/Yule-Walker IIR Filter Design
mapOldMaskToCurrent = { ...
%'Biquadratic Filter', ...
%   'Biquadratic Filter', ...
%   'S-Function', ...
%   'dspobslib/Biquadratic\nFilter', ...
%   { ...
%      'sos'; ...
%      'IC'; ...
%   }, ...
%   'sdspfilter'; ...
'Contiguous Copy', ...
   'Contiguous Copy', ...
   'S-Function', ...
   'dspobslib/Contiguous\nCopy', ...
   { ...
   }, ...
   'sdspcontig2', []; ...
%'Digital FIR Filter Design', ...
%  'Digital FIR Filter Design', ...
%  'SubSystem', ...
%  'dspobslib/Digital FIR\nFilter Design', ...
%  { ...
%  }, ...
%  ''; ...
%'Digital FIR Raised Cosine Filter Design', ...
%  'Digital FIR Raised Cosine Filter Design', ...
%  'SubSystem', ...
%  'dspobslib/Digital FIR Raised\nCosine Filter Design', ...
%  { ...
%  }, ...
%  ''; ...
%'Digital IIR Filter Design', ...
%  'Digital IIR Filter Design', ...
%  'SubSystem', ...
%  'dspobslib/Digital IIR\nFilter Design', ...
%  { ...
%  }, ...
%  ''; ...
%'Direct-Form II Transpose Filter', ...
%  'Direct-Form II Transpose Filter', ...
%  'S-Function', ...
%  'dspobslib/Direct-Form II\nTranspose Filter', ...
%  { ...
%  }, ...
%  'sdspfilter'; ...
'Dyadic Analysis Filter Bank', ...
   'Dyadic Analysis Filter Bank', ...
   'S-Function', ...
   'dspobslib/Dyadic Analysis\nFilter Bank', ...
   { ...
      'hl'; ...
      'hh'; ...
      'numLevels'; ...
      'tree'; ...   
   }, ...
   'sdspadyad2', []; ...
'Dyadic Synthesis Filter Bank', ...
   'Dyadic Synthesis Filter Bank', ...
   'S-Function', ...
   'dspobslib/Dyadic Synthesis\nFilter Bank', ...
   { ...
      'hl'; ...
      'hh'; ...
      'numLevels'; ...
      'tree'; ...   
   }, ...
   'sdspsdyad2', []; ...
'Frame Status Conversion', ...
   'Frame Status Conversion', ...
   'SubSystem', ...
   'dspobslib/Frame Status\nConversion', ...
   { ...
   }, ...
   '', []; ...
% xxx uncomment when name collision is resolved in slupdate
%'Integer Delay', ...
%   'Integer Delay', ...
%   'S-Function', ...
%   'dspobslib/Integer Delay', ...
%   { ...
%   }, ...
%   'sdspdly2'; ...
'LMS Adaptive Filter', ...
   'LMS Adaptive Filter', ...
   'SubSystem', ...
   'dspobslib/LMS\nAdaptive Filter', ...
   { ...
   }, ...
   '', []; ...
%'Least Squares FIR Filter Design', ...
%   'Least Squares FIR Filter Design', ...
%   'SubSystem', ...
%   'dspobslib/Least Squares FIR\nFilter Design', ...
%   { ...
%   }, ...
%   ''; ...
'RLS Adaptive Filter', ...
   'RLS Adaptive Filter', ...
   'SubSystem', ...
   'dspobslib/RLS\nAdaptive Filter', ...
   { ...
   }, ...
   '', []; ...
%'Remez FIR Filter Design', ...
%   'Remez FIR Filter Design', ...
%   'SubSystem', ...
%   'dspobslib/Remez FIR\nFilter Design', ...
%   { ...
%   }, ...
%   ''; ...
'Scalar Quantizer', ...
   'Scalar Quantizer', ...
   'S-Function', ...
   'dspobslib/Scalar Quantizer', ...
   { ...
   }, ...
   'sdspsq', []; ...
%'Time-Varying Lattice Filter', ...
%   'Time-Varying Lattice Filter', ...
%   'S-Function', ...
%   'dspobslib/Time-Varying\nLattice Filter', ...
%   { ...
%   }, ...
%   'sdspfilter'; ...
%'Time-Varying Direct-Form II Transpose Filter', ...
%   'Time-Varying Direct-Form II Transpose Filter', ...
%   'S-Function', ...
%   'dspobslib/Time-Varying Direct-\nForm II Transpose Filter', ...
%   { ...
%   }, ...
%   'sdspfilter'; ...
'Wavelet Analysis', ...
   'Wavelet Analysis', ...
   'S-Function', ...
   'dspobslib/Wavelet\nAnalysis', ...
   { ...
   }, ...
   'sdspadyad2', []; ...
'Wavelet Synthesis', ...
   'Wavelet Synthesis', ...
   'S-Function', ...
   'dspobslib/Wavelet\nSynthesis', ...
   { ...
   }, ...
   'sdspsdyad2', []; ...
%'Yule-Walker IIR Filter Design', ...
%   'Yule-Walker IIR Filter Design', ...
%   'SubSystem', ...
%   'dspobslib/Yule-Walker IIR\nFilter Design', ...
%   { ...
%   }, ...
%   ''; ...
};

function mapOldMaskToCurrent = dspparest3Map()
mapOldMaskToCurrent = { ...
'Burg AR Estimator', ...
   'Burg AR Estimator', ...
   'S-Function', ...
   'dspparest3/Burg AR\nEstimator', ...
   { ...
   }, ...
   'sdspburg2', []; ...
'Covariance AR Estimator', ...
   'Covariance AR Estimator', ...
   'SubSystem', ...
   'dspparest3/Covariance AR\nEstimator', ...
   { ...
   }, ...
   '', []; ...
'Modified Covariance AR Estimator', ...
   'Modified Covariance AR Estimator', ...
   'SubSystem', ...
   'dspparest3/Modified Covariance\nAR Estimator', ...
   { ...
   }, ...
   '', []; ...
'Yule-Walker AR Estimator', ...
   'Yule-Walker AR Estimator', ...
   'SubSystem', ...
   'dspparest3/Yule-Walker AR\nEstimator', ...
   { ...
   }, ...
   '', []; ...
};

function mapOldMaskToCurrent = dsppolyfunMap()
mapOldMaskToCurrent = { ...
'Least Squares Polynomial Fit', ...
   'Least Squares Polynomial Fit', ...
   'SubSystem', ...
   'dsppolyfun/Least Squares\nPolynomial Fit', ...
   { ...    
   }, ...
   '', []; ...
'Polynomial Evaluation', ...
   'Polynomial Evaluation', ...
   'S-Function', ...
   'dsppolyfun/Polynomial\nEvaluation', ...
   { ...  
   }, ...
   'sdsppolyval2', []; ...
'Polynomial Stability Test', ...
   'Polynomial Stability Test', ...
   'S-Function', ...
   'dsppolyfun/Polynomial\nStability Test', ...
   { ...
   }, ...
   'sdspsctest', []; ...
};

function mapOldMaskToCurrent = dspquant2Map()
mapOldMaskToCurrent = { ...
'G.711 Codec', ...
   'G.711 Codec', ...
   'S-Function', ...
   'dspquant2/G.711 Codec', ...
   { ...     
   }, ...
   'sdspg711', []; ...
'Scalar Quantizer Decoder', ...
   'Scalar Quantizer Decoder', ...
   'S-Function', ...
   'dspquant2/Scalar Quantizer\nDecoder', ...
   { ...      
   }, ...
   'sdspsqdec', []; ...
'Scalar Quantizer Encoder', ...
   'Scalar Quantizer Encoder', ...
   'S-Function', ...
   'dspquant2/Scalar Quantizer\nEncoder', ...
   { ...      
   }, ...
   'sdspsqenc', []; ...
'Scalar Quantizer Design', ...
   'Scalar Quantizer Design', ...
   'SubSystem', ...
   'dspquant2/Scalar Quantizer \nDesign', ...
   { ...
   }, ...
   '', []; ...
'Uniform Decoder', ...
   'Uniform Decoder', ...
   'S-Function', ...
   'dspquant2/Uniform\nDecoder', ...
   { ...     
   }, ...
   'sdspudecode2', []; ...
'Uniform Encoder', ...
   'Uniform Encoder', ...
   'S-Function', ...
   'dspquant2/Uniform\nEncoder', ...
   { ...      
   }, ...
   'sdspuencode2', []; ...
'Vector Quantizer Decoder', ...
   'Vector Quantizer Decoder', ...
   'S-Function', ...
   'dspquant2/Vector Quantizer\nDecoder', ...
   { ...     
   }, ...
   'sdspvqdec', []; ...
'Vector Quantizer Design', ...
   'Vector Quantizer Design', ...
   'SubSystem', ...
   'dspquant2/Vector Quantizer\nDesign', ...
   { ...
   }, ...
   '', []; ...
'Vector Quantizer Encoder', ...
   'Vector Quantizer Encoder', ...
   'S-Function', ...
   'dspquant2/Vector Quantizer\nEncoder', ...
   { ...     
   }, ...
   'sdspvqenc', []; ...
};

function mapOldMaskToCurrent = dspsigattribsMap()
mapOldMaskToCurrent = { ...
'Check Signal Attributes', ...
   'Check Signal Attributes', ...
   'SubSystem', ...
   'dspsigattribs/Check Signal\nAttributes', ...
   { ...     
   }, ...
   '', []; ...
'Convert 1-D to 2-D', ...
   'Convert 1-D to 2-D', ...
   'SubSystem', ...
   'dspsigattribs/Convert 1-D to 2-D', ...
   { ...     
   }, ...
   '', []; ...
'Convert 2-D to 1-D', ...
   'Convert 2-D to 1-D', ...
   'SubSystem', ...
   'dspsigattribs/Convert 2-D to 1-D', ...
   { ...
   }, ...
   '', []; ...
'Inherit Complexity', ...
   'Inherit Complexity', ...
   'S-Function', ...
   'dspsigattribs/Inherit\nComplexity', ...
   { ...
   }, ...
   'sdspihcplx2', []; ...
};

function mapOldMaskToCurrent = dspsigopsMap()
mapOldMaskToCurrent = { ...
'Constant Ramp', ...
   'Constant Ramp', ...
   'S-Function', ...
   'dspsigops/Constant Ramp', ...
   { ...     
   }, ...
   'sdspramp', []; ...
'Convolution', ...
   'Convolution', ...
   'S-Function', ...
   'dspsigops/Convolution', ...
   { ...     
   }, ...
   'sdspconvcorr', []; ...
'Delay', ...
   'Delay', ...
   'S-Function', ...
   'dspsigops/Delay', ...
   { ...     
   }, ...
   'sdspdelay', []; ...
'Downsample', ...
   'Downsample', ...
   'S-Function', ...
   'dspsigops/Downsample', ...
   { ...     
   }, ...
   'sdspdsamp2', @dspFixBrokenLinksIP; ...
'Interpolation', ...
   'Interpolation', ...
   'S-Function', ...
   'dspsigops/Interpolation', ...
   { ...      
   }, ...
   'sdspinterp', []; ...
'NCO', ...
   'NCO', ...
   'S-Function', ...
   'dspsigops/NCO', ...
   { ...      
   }, ...
   'sdspnco', []; ...
'Offset', ...
   'Offset', ...
   'S-Function', ...
   'dspsigops/Offset', ...
   { ...      
   }, ...
   'sdspoffset', []; ...
'Pad', ...
   'Pad', ...
   'S-Function', ...
   'dspsigops/Pad', ...
   { ...      
   }, ...
   'sdsppad', []; ...
'Peak Finder', ...
   'Peak Finder', ...
   'S-Function', ...
   'dspsigops/Peak Finder', ...
   { ...      
   }, ...
   'sdsppeaks', []; ...
'Repeat', ...
   'Repeat', ...
   'S-Function', ...
   'dspsigops/Repeat', ...
   { ...
   }, ...
   'sdspupsamp2', @dspFixBrokenLinksIP; ...
'Sample and Hold', ...
   'Sample and Hold', ...
   'SubSystem', ...
   'dspsigops/Sample\nand Hold', ...
   { ...     
   }, ...
   '', []; ...
'Triggered Signal From Workspace', ...
   'Triggered Signal From Workspace', ...
   'SubSystem', ...
   'dspsigops/Triggered Signal\nFrom Workspace', ...
   { ...      
   }, ...
   '', []; ...
'Unwrap', ...
   'Unwrap', ...
   'S-Function', ...
   'dspsigops/Unwrap', ...
   { ...     
   }, ...
   'sdspunwrap2', []; ...
'Upsample', ...
   'Upsample', ...
   'S-Function', ...
   'dspsigops/Upsample', ...
   { ...      
   }, ...
   'sdspupsamp2', @dspFixBrokenLinksIP; ...
'Variable Fractional Delay', ...
   'Variable Fractional Delay', ...
   'S-Function', ...
   'dspsigops/Variable\nFractional Delay', ...
   { ...     
   }, ...
   'sdspvfdly2', @dspFixBrokenLinksIP; ...
'Variable Integer Delay', ...
   'Variable Integer Delay', ...
   'S-Function', ...
   'dspsigops/Variable\nInteger Delay', ...
   { ...      
   }, ...
   'sdspvidly2', []; ...
'Window Function', ...
   'Window Function', ...
   'S-Function', ...
   'dspsigops/Window\nFunction', ...
   { ...     
   }, ...
   'sdspwindow2', []; ...
'Zero Crossing', ...
   'Zero Crossing', ...
   'S-Function', ...
   'dspsigops/Zero Crossing', ...
   { ...
   }, ...
   'sdspzc', []; ...
};

function mapOldMaskToCurrent = dspsnks4Map()
mapOldMaskToCurrent = { ...
'Matrix Viewer', ...
   'Matrix Viewer', ...
   'M-S-Function', ...
   'dspsnks4/Matrix\nViewer', ...
   { ...     
   }, ...
   'sdspmview2', []; ...
'Signal To Workspace', ...
   'Signal To Workspace', ...
   'SubSystem', ...
   'dspsnks4/Signal To\nWorkspace', ...
   { ...     
   }, ...
   '', []; ...
'Spectrum Scope', ...
   'Spectrum Scope', ...
   'SubSystem', ...
   'dspsnks4/Spectrum\nScope', ...
   { ...      
   }, ...
   '', []; ...
'To Multimedia File', ...
   'To Multimedia File', ...
   'S-Function', ...
   'dspsnks4/To Multimedia File', ...
   { ...
   }, ...
   'sdspwmmfo2', []; ...
'To Audio Device', ...
   'To Audio Device', ...
   'S-Function', ...
   'dspsnks4/To Audio\nDevice', ...
   { ...     
   }, ...
   'sdspToAudioDevice', []; ...
'Triggered To Workspace', ...
   'Triggered To Workspace', ...
   'SubSystem', ...
   'dspsnks4/Triggered\nTo Workspace', ...
   { ...      
   }, ...
   '', []; ...
'Vector Scope', ...
   'Vector Scope', ...
   'M-S-Function', ...
   'dspsnks4/Vector\nScope', ...
   { ...      
   }, ...
   'sdspfscope2', []; ...
'Waterfall', ...
   'Waterfall', ...
   'SubSystem', ...
   'dspsnks4/Waterfall', ...
   { ...      
   }, ...
   '', []; ...
};

function mapOldMaskToCurrent = dspsolversMap()
mapOldMaskToCurrent = { ...
'Backward Substitution', ...
   'Backward Substitution', ...
   'S-Function', ...
   'dspsolvers/Backward\nSubstitution', ...
   { ...      
   }, ...
   'sdspfbsub2', []; ...
'Cholesky Solver', ...
   'Cholesky Solver', ...
   'SubSystem', ...
   'dspsolvers/Cholesky Solver', ...
   { ...     
   }, ...
   '', []; ...
'Forward Substitution', ...
   'Forward Substitution', ...
   'S-Function', ...
   'dspsolvers/Forward\nSubstitution', ...
   { ...     
   }, ...
   'sdspfbsub2', []; ...
'LDL Solver', ...
   'LDL Solver', ...
   'SubSystem', ...
   'dspsolvers/LDL Solver', ...
   { ...     
   }, ...
   '', []; ...
'LU Solver', ...
   'LU Solver', ...
   'SubSystem', ...
   'dspsolvers/LU Solver', ...
   { ...
   }, ...
   '', []; ...
'Levinson-Durbin', ...
   'Levinson-Durbin', ...
   'S-Function', ...
   'dspsolvers/Levinson-Durbin', ...
   { ...      
   }, ...
   'sdsplevdurb2', []; ...
'QR Solver', ...
   'QR Solver', ...
   'S-Function', ...
   'dspsolvers/QR Solver', ...
   { ...
   }, ...
   'sdspqreslv2', []; ...
'SVD Solver', ...
   'SVD Solver', ...
   'SubSystem', ...
   'dspsolvers/SVD Solver', ...
   { ...
   }, ...
   '', []; ...
};

function mapOldMaskToCurrent = dspspect3Map()
mapOldMaskToCurrent = { ...
'Burg Method', ...
   'Burg Method', ...
   'SubSystem', ...
   'dspspect3/Burg Method', ...
   { ...     
   }, ...
   '', []; ...
'Covariance Method', ...
   'Covariance Method', ...
   'SubSystem', ...
   'dspspect3/Covariance Method', ...
   { ...      
   }, ...
   '', []; ...
'Magnitude FFT', ...
   'Magnitude FFT', ...
   'SubSystem', ...
   'dspspect3/Magnitude\nFFT', ...
   { ...     
   }, ...
   '', []; ...
'Modified Covariance Method', ...
   'Modified Covariance Method', ...
   'SubSystem', ...
   'dspspect3/Modified Covariance\nMethod', ...
   { ...     
   }, ...
   '', []; ...
'Periodogram', ...
   'Periodogram', ...
   'SubSystem', ...
   'dspspect3/Periodogram', ...
   { ...      
   }, ...
   '', []; ...
'Yule-Walker Method', ...
   'Yule-Walker Method', ...
   'SubSystem', ...
   'dspspect3/Yule-Walker\nMethod', ...
   { ...      
   }, ...
   '', []; ...
};

function mapOldMaskToCurrent = dspsrcs4Map()
% Data sets for several blocks in this function are commented out as they are linked copies
% of blocks that live in other (parent) libraries. The parent library mapping functions 
% have data entries for these blocks, hence no need for a separate entry here.
% These blocks are listed here with their parent blocks:-
% Constant Diagonal Matrix --> dspmtrx3/Constant Diagonal Matrix
% Identity Matrix --> dspmtrx3/Identity Matrix
% N-Sample Enable --> dspswit3/N-Sample Enable
mapOldMaskToCurrent = { ...
'Chirp', ...
   'Chirp', ...
   'S-Function', ...
   'dspsrcs4/Chirp', ...
   { ...      
   }, ...
   'sdspchirp', []; ...
%'Constant Diagonal Matrix', ...
%   'Constant Diagonal Matrix', ...
%   'SubSystem', ...
%   'dspsrcs4/Constant Diagonal\nMatrix', ...
%   { ...
%   }, ...
%   ''; ...
'DSP Constant', ...
   'DSP Constant', ...
   'SubSystem', ...
   'dspsrcs4/DSP\nConstant', ...
   { ...     
   }, ...
   '', []; ...
'Discrete Impulse ', ...
   'Discrete Impulse ', ...
   'S-Function', ...
   'dspsrcs4/Discrete \nImpulse', ...
   { ...     
   }, ...
   'sdspimpgen2', []; ...
'From Multimedia File', ...
   'From Multimedia File', ...
   'S-Function', ...
   'dspsrcs4/From Multimedia File', ...
   { ...
   }, ...
   'sdspwmmfi2', []; ...
'From Audio Device', ...
   'From Audio Device', ...
   'S-Function', ...
   'dspsrcs4/From Audio\nDevice', ...
   { ...      
   }, ...
   'sdspFromAudioDevice', []; ...
%'Identity Matrix', ...
%   'Identity Matrix', ...
%   'S-Function', ...
%   'dspsrcs4/Identity Matrix', ...
%   { ...
%   }, ...
%   'sdspeye'; ...
'Multiphase Clock', ...
   'Multiphase Clock', ...
   'S-Function', ...
   'dspsrcs4/Multiphase Clock', ...
   { ...
   }, ...
   'sdspmpclk2', []; ...
%'N-Sample Enable', ...
%   'N-Sample Enable', ...
%   'S-Function', ...
%   'dspsrcs4/N-Sample\nEnable', ...
%   { ...
%   }, ...
%   'sdspnsamp2'; ...
'Random Source', ...
   'Random Source', ...
   'S-Function', ...
   'dspsrcs4/Random\nSource', ...
   { ...
   }, ...
   'sdsprandsrc2', []; ...
'Signal From Workspace', ...
   'Signal From Workspace', ...
   'SubSystem', ...
   'dspsrcs4/Signal From\nWorkspace', ...
   { ...
   }, ...
   '', []; ...
'Sine Wave', ...
   'Sine Wave', ...
   'S-Function', ...
   'dspsrcs4/Sine Wave', ...
   { ...
   }, ...
   'sdspsine2', []; ...
};

function mapOldMaskToCurrent = dspstat3Map()
mapOldMaskToCurrent = { ...
'Autocorrelation', ...
   'Autocorrelation', ...
   'S-Function', ...
   'dspstat3/Autocorrelation', ...
   { ...   
   }, ...
   'sdspacf2', []; ...
'Correlation', ...
   'Correlation', ...
   'S-Function', ...
   'dspstat3/Correlation', ...
   { ...     
   }, ...
   'sdspconvcorr', []; ...
'Detrend', ...
   'Detrend', ...
   'SubSystem', ...
   'dspstat3/Detrend', ...
   { ...
   }, ...
   '', []; ...
'Histogram', ...
   'Histogram', ...
   'S-Function', ...
   'dspstat3/Histogram', ...
   { ...
   }, ...
   'sdsphist2', []; ...
'Maximum', ...
   'Maximum', ...
   'S-Function', ...
   'dspstat3/Maximum', ...
   { ...
   }, ...
   'sdspstatminmax', []; ...
'Mean', ...
   'Mean', ...
   'S-Function', ...
   'dspstat3/Mean', ...
   { ...
   }, ...
   'sdspstatfcns', []; ...
'Median', ...
   'Median', ...
   'S-Function', ...
   'dspstat3/Median', ...
   { ...
   }, ...
   'sdspmdn2', []; ...
'Minimum', ...
   'Minimum', ...
   'S-Function', ...
   'dspstat3/Minimum', ...
   { ...
   }, ...
   'sdspstatminmax', []; ...
'RMS', ...
   'RMS', ...
   'S-Function', ...
   'dspstat3/RMS', ...
   { ...     
   }, ...
   'sdspstatfcns', []; ...
'Sort', ...
   'Sort', ...
   'S-Function', ...
   'dspstat3/Sort', ...
   { ...
   }, ...
   'sdspsrt2', []; ...
'Standard Deviation', ...
   'Standard Deviation', ...
   'S-Function', ...
   'dspstat3/Standard\nDeviation', ...
   { ...
   }, ...
   'sdspstatfcns', []; ...
'Variance', ...
   'Variance', ...
   'S-Function', ...
   'dspstat3/Variance', ...
   { ...
   }, ...
   'sdspstatfcns', []; ...
};

function mapOldMaskToCurrent = dspswit3Map()
mapOldMaskToCurrent = { ...
'Counter', ...
   'Counter', ...
   'S-Function', ...
   'dspswit3/Counter', ...
   { ...
   }, ...
   'sdspcount2', []; ...
'Edge Detector', ...
   'Edge Detector', ...
   'SubSystem', ...
   'dspswit3/Edge\nDetector', ...
   { ...
   }, ...
   '', []; ...
'Event-Count Comparator', ...
   'Event-Count Comparator', ...
   'SubSystem', ...
   'dspswit3/Event-Count\nComparator', ...
   { ...      
   }, ...
   '', []; ...
% dspswit3/Multiphase Clock block is a linked copy of dspsrcs4/Multiphase Clock block, hence 
% no need for a separate entry here. dspsrcs4Map() has a data entry for 'Multiphase Clock'
% mask type which would take care of such blocks.
%'Multiphase Clock', ...
%   'Multiphase Clock', ...
%   'S-Function', ...
%   'dspswit3/Multiphase Clock', ...
%   { ...
%   }, ...
%   'sdspmpclk2'; ...
'N-Sample Enable', ...
   'N-Sample Enable', ...
   'S-Function', ...
   'dspswit3/N-Sample\nEnable', ...
   { ...
   }, ...
   'sdspnsamp2', []; ...
'N-Sample Switch', ...
   'N-Sample Switch', ...
   'SubSystem', ...
   'dspswit3/N-Sample\nSwitch', ...
   { ...
   }, ...
   '', []; ...
};

function mapOldMaskToCurrent = dspxfrm3Map()
mapOldMaskToCurrent = { ...
'Analytic Signal', ...
   'Analytic Signal', ...
   'SubSystem', ...
   'dspxfrm3/Analytic Signal', ...
   { ...    
   }, ...
   '', @dspFixBrokenLinksIP; ...
'Complex Cepstrum', ...
   'Complex Cepstrum', ...
   'SubSystem', ...
   'dspxfrm3/Complex\nCepstrum', ...
   { ...     
   }, ...
   '', [],; ...
'DCT', ...
   'DCT', ...
   'S-Function', ...
   'dspxfrm3/DCT', ...
   { ...      
   }, ...
   'sdspdct3', []; ...
'DWT', ...
   'DWT', ...
   'S-Function', ...
   'dspxfrm3/DWT', ...
   { ...      
   }, ...
   'sdspdwt', []; ...
'FFT', ...
   'FFT', ...
   'S-Function', ...
   'dspxfrm3/FFT', ...
   { ...     
   }, ...
   'sdspfft2', []; ...
'IDCT', ...
   'IDCT', ...
   'S-Function', ...
   'dspxfrm3/IDCT', ...
   { ...      
   }, ...
   'sdspdct3', []; ...
'IDWT', ...
   'IDWT', ...
   'S-Function', ...
   'dspxfrm3/IDWT', ...
   { ...      
   }, ...
   'sdspidwt', []; ...
'IFFT', ...
   'IFFT', ...
   'S-Function', ...
   'dspxfrm3/IFFT', ...
   { ...      
   }, ...
   'sdspfft2', []; ...
'Inverse Short-Time FFT', ...
   'Inverse Short-Time FFT', ...
   'SubSystem', ...
   'dspxfrm3/Inverse \nShort-Time FFT', ...
   { ...      
   }, ...
   '', []; ...
% dspxfrm3/Magnitude FFT block is a linked copy of dspspect3/Magnitude FFT block, hence 
% no need for a separate entry here. dspspect34Map() has a data entry for 'Magnitude FFT'
% mask type which would take care of such blocks.
%'Magnitude FFT', ...
%   'Magnitude FFT', ...
%   'SubSystem', ...
%   'dspxfrm3/Magnitude\nFFT', ...
%   { ...
%   }, ...
%   ''; ...
'Real Cepstrum', ...
   'Real Cepstrum', ...
   'SubSystem', ...
   'dspxfrm3/Real\nCepstrum', ...
   { ...      
   }, ...
   '', []; ...
'Short-Time FFT', ...
   'Short-Time FFT', ...
   'SubSystem', ...
   'dspxfrm3/Short-Time FFT', ...
   { ...     
   }, ...
   '', []; ...
};

function mapOldMaskToCurrent = dspnetworkMap()
mapOldMaskToCurrent = { ...
'UDP Send', ...
   'UDP Send', ...
   'SubSystem', ...
   'dspnetwork/UDP Send', ...
   { ...      
   }, ...
   '', []; ...
'UDP Receive', ...
   'UDP Receive', ...
   'SubSystem', ...
   'dspnetwork/UDP Receive', ...
   { ...      
   }, ...
   '', []; ...
};

%[EOF] spblksBrokenLinksMapping.m
